Aim:
To develop a Python program that reads and modifies Windows network configuration files such as 
/etc/hosts, /etc/resolv.conf, and /etc/network/interfaces.
Software & Tools Required:
 Python 3.x installed on the system
 Linux operating system (Ubuntu, Debian, CentOS, etc.)
 Text editor or IDE (VS Code, PyCharm, Nano, etc.)
Experiment Steps:
Step 1: Understanding Network Configuration Files
1. /etc/hosts - Maps hostnames to IP addresses.
2. /etc/resolv.conf - Contains DNS resolver configurations.
3. /etc/network/interfaces - Defines network interfaces and their settings (for Debianbased systems).
Step 2: Read and Display Configuration Files
1. Create a Python script (network_config.py) to read the contents of the network 
configuration files.
2. Example code to read the files:
import os
import shutil
# Windows hosts file location
HOSTS_FILE = r"C:\Windows\System32\drivers\etc\hosts"
def read_hosts():
 """Reads and displays the contents of the Windows hosts file."""
 if not os.path.exists(HOSTS_FILE):
 print("[ERROR] Hosts file not found!")
 return
 try:
 with open(HOSTS_FILE, 'r') as file:
 print("\n===== Contents of hosts file =====\n")
 print(file.read())
 except Exception as e:
 print(f"[ERROR] Failed to read hosts file: {e}")
3. Run the script and verify the output.
Step 3: Modify Network Configuration Files
1. Update /etc/hosts by adding a new hostname mapping:
def modify_hosts():
 """Adds a custom hostname mapping to the Windows hosts file."""
 if not os.path.exists(HOSTS_FILE):
 print("[ERROR] Hosts file not found!")
 return
 try:
 # Backup the hosts file before modifying
 shutil.copy(HOSTS_FILE, HOSTS_FILE + ".bak")
 with open(HOSTS_FILE, "a") as file:
 file.write("\n192.168.1.100 mycustomhost\n")
 print("[SUCCESS] Hosts file updated.")
 except Exception as e:
 print(f"[ERROR] Failed to update hosts file: {e}")
2. Restart networking services after modification using:
def restart_network():
 """Flushes the DNS cache to apply changes."""
 try:
 os.system("ipconfig /flushdns")
 print("[SUCCESS] DNS cache flushed. Changes applied.")
 except Exception as e:
 print(f"[ERROR] Failed to flush DNS cache: {e}")
if _name_ == "_main_":
 # Step 1: Read and display the hosts file
 read_hosts()
 # Step 2: Modify the hosts file
 modify_hosts()
 # Step 3: Flush DNS cache to apply changes
 restart_network()
3. Restart networking services after modification using:
Python network_config.py
Expected Outcome:
✅ The Python program successfully reads and displays network configuration files.
✅ Modifications to network files are made, and changes take effect after restarting networking 
services.
