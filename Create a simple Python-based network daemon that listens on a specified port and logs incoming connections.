Aim:
To develop a simple Python-based network daemon that listens on a specified port and logs 
incoming connections.
Software & Tools Required:
 Python 3.x installed on the system
 socket library for network communication
Experiment Steps:
Step 1: Implement a Basic Network Daemon
1. Create a Python script (network_daemon.py) to listen on a specified port.
2. Example code:
import socket
def start_daemon(host='0.0.0.0', port=5000):
 server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
 server_socket.bind((host, port))
 server_socket.listen(5)
 print(f"Listening on {host}:{port}")
 while True:
 client_socket, client_address = server_socket.accept()
 print(f"Connection received from {client_address}")
 client_socket.sendall(b"Hello! You are connected.\n")
 client_socket.close()
start_daemon()
3. Run the script and verify that it listens on the specified port.
4. Test it by connecting using telnet or another device.
Expected Outcome:
✅ The Python script successfully creates a network daemon that logs incoming connections.

